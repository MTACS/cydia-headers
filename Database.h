/*
* This header is generated by classdump-dyld 0.7
* on Friday, July 3, 2015 at 6:37:31 AM Central European Summer Time
* Operating System: Version 8.3 (Build 12F70)
* Image Source: /private/var/db/stash/_.2t7K5z/Applications/Cydia.app/Cydia
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol DatabaseDelegate, ProgressDelegate;
#import <Cydia/Cydia-Structs.h>
@class NSObject;

@interface Database : NSObject {

	NSZone* zone_;
	CYPool* pool_;
	unsigned era_;
	MenesObjectHandle<NSDate, 0> delock_;
	pkgCacheFile* cache_;
	Policy* policy_;
	pkgRecords* records_;
	pkgProblemResolver* resolver_;
	pkgAcquire* fetcher_;
	FileFd* lock_;
	SPtr<pkgPackageManager>* manager_;
	pkgSourceList* list_;
	map<unsigned long, MenesObjectHandle<Source, 0>, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, MenesObjectHandle<Source, 0> > > >* sourceMap_;
	MenesObjectHandle<NSMutableArray, 0> sourceList_;
	CFArrayRef packages_;
	NSObject*<DatabaseDelegate> delegate_;
	NSObject*<ProgressDelegate> progress_;
	CydiaStatus* status_;
	int cydiafd_;
	int statusfd_;
	_sFILE* input_;
	map<const char *, MenesObjectHandle<NSString, 0>, std::less<const char *>, std::allocator<std::pair<const char *const, MenesObjectHandle<NSString, 0> > > >* sections_;

}
+(id)sharedInstance;
-(id)packageWithName:(id)arg1 ;
-(void)setFetch:(BOOL)arg1 forURI:(const char*)arg2 ;
-(void)resetFetch;
-(id)mappedSectionForPointer:(const char*)arg1 ;
-(id)getSource:(PkgFileIterator*)arg1 ;
-(void)releasePackages;
-(void)_readCydia:(id)arg1 ;
-(void)_readStatus:(id)arg1 ;
-(void)_readOutput:(id)arg1 ;
-(BOOL)popErrorWithTitle:(id)arg1 ;
-(BOOL)popErrorWithTitle:(id)arg1 forOperation:(BOOL)arg2 ;
-(BOOL)_isEtceteraAptSourcesListDirectoryCydiaListSymbolicallyLinkedToMobileCachesCydiaSourceList;
-(BOOL)popErrorWithTitle:(id)arg1 forReadList:(pkgSourceList*)arg2 ;
-(void)configure;
-(pkgAcquire*)fetcher;
-(id)packages;
-(id)sourceWithKey:(id)arg1 ;
-(void)reloadDataWithInvocation:(id)arg1 ;
-(BOOL)clean;
-(BOOL)delocked;
-(Policy*)policy;
-(void)dealloc;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(_sFILE*)input;
-(void)perform;
-(void)update;
-(pkgRecords*)records;
-(void)clear;
-(pkgCacheFile*)cache;
-(unsigned)era;
-(void)updateWithStatus:(CancelStatus*)arg1 ;
-(id)sources;
-(pkgSourceList*)list;
-(BOOL)upgrade;
-(id)progressDelegate;
-(void)setProgressDelegate:(id)arg1 ;
-(pkgProblemResolver*)resolver;
-(BOOL)prepare;
@end

